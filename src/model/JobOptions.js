/**
 * Cielo24
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IWPEnum from './IWPEnum';

/**
 * The JobOptions model module.
 * @module model/JobOptions
 * @version 1.0.0
 */
class JobOptions {
    /**
     * Constructs a new <code>JobOptions</code>.
     * @alias module:model/JobOptions
     */
    constructor() { 
        
        JobOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobOptions} obj Optional instance to populate.
     * @return {module:model/JobOptions} The populated <code>JobOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobOptions();

            if (data.hasOwnProperty('customer_approval_steps')) {
                obj['customer_approval_steps'] = ApiClient.convertToType(data['customer_approval_steps'], ['String']);
            }
            if (data.hasOwnProperty('customer_approval_tool')) {
                obj['customer_approval_tool'] = ApiClient.convertToType(data['customer_approval_tool'], 'String');
            }
            if (data.hasOwnProperty('custom_metadata')) {
                obj['custom_metadata'] = ApiClient.convertToType(data['custom_metadata'], Object);
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], Object);
            }
            if (data.hasOwnProperty('return_iwp')) {
                obj['return_iwp'] = ApiClient.convertToType(data['return_iwp'], [IWPEnum]);
            }
            if (data.hasOwnProperty('generate_media_intelligence_iwp')) {
                obj['generate_media_intelligence_iwp'] = ApiClient.convertToType(data['generate_media_intelligence_iwp'], [IWPEnum]);
            }
            if (data.hasOwnProperty('speaker_id')) {
                obj['speaker_id'] = ApiClient.convertToType(data['speaker_id'], 'String');
            }
            if (data.hasOwnProperty('audio_description')) {
                obj['audio_description'] = ApiClient.convertToType(data['audio_description'], 'String');
            }
            if (data.hasOwnProperty('on_screen_text')) {
                obj['on_screen_text'] = ApiClient.convertToType(data['on_screen_text'], 'String');
            }
            if (data.hasOwnProperty('music_lyrics')) {
                obj['music_lyrics'] = ApiClient.convertToType(data['music_lyrics'], 'String');
            }
            if (data.hasOwnProperty('custom_special_handling')) {
                obj['custom_special_handling'] = ApiClient.convertToType(data['custom_special_handling'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Requires your approval of a job at specified points in the workflow. When the job is ready for approval you will be emailed a link that will take you to a web based tool you can use to view, edit and approve the job. You may request approval at two points in the workflow: before translation and before the job is returned.
 * @member {Array.<module:model/JobOptions.CustomerApprovalStepsEnum>} customer_approval_steps
 */
JobOptions.prototype['customer_approval_steps'] = undefined;

/**
 * Determines which web based tool to use for viewing, editing and approving jobs.
 * @member {module:model/JobOptions.CustomerApprovalToolEnum} customer_approval_tool
 * @default 'CIELO24'
 */
JobOptions.prototype['customer_approval_tool'] = 'CIELO24';

/**
 * A JSON dictionary of key value pairs. These will be used as substitution strings when building the callback URL and custom DFXP caption header.
 * @member {Object} custom_metadata
 */
JobOptions.prototype['custom_metadata'] = undefined;

/**
 * Allows you to provide text that will be displayed to the transcriber when the job is processed. An HTML included will be escaped.
 * @member {Object} notes
 */
JobOptions.prototype['notes'] = undefined;

/**
 * Allows you to receive additional callbacks when interim versions of the job are completed. If you specified a callback_url, then a callback will sent for FINAL regardless of the value of this option.
 * @member {Array.<module:model/IWPEnum>} return_iwp
 */
JobOptions.prototype['return_iwp'] = undefined;

/**
 * Requests that media intelligence be generated for the specified interim/final versions of the transcript. Media intelligence data is added to the ElementList and can be retrieve using the get_elementlist API call. See [ElementList](https://cielo24.readthedocs.io/en/latest/output_formats/elementlist.html#media-intelligence-label) for details.
 * @member {Array.<module:model/IWPEnum>} generate_media_intelligence_iwp
 */
JobOptions.prototype['generate_media_intelligence_iwp'] = undefined;

/**
 * Requests that speaker names be identified.
 * @member {module:model/JobOptions.SpeakerIdEnum} speaker_id
 * @default 'false'
 */
JobOptions.prototype['speaker_id'] = 'false';

/**
 * Requests that all noises and sounds be identified.
 * @member {module:model/JobOptions.AudioDescriptionEnum} audio_description
 * @default 'false'
 */
JobOptions.prototype['audio_description'] = 'false';

/**
 * Requests that any text that appears in the media be added to the transcription.
 * @member {module:model/JobOptions.OnScreenTextEnum} on_screen_text
 * @default 'false'
 */
JobOptions.prototype['on_screen_text'] = 'false';

/**
 * Requests that lyrics to songs be transcribed instead of labeled [MUSIC].
 * @member {module:model/JobOptions.MusicLyricsEnum} music_lyrics
 * @default 'false'
 */
JobOptions.prototype['music_lyrics'] = 'false';

/**
 * Requests that transcribers follow submitted instruction set.
 * @member {module:model/JobOptions.CustomSpecialHandlingEnum} custom_special_handling
 * @default 'false'
 */
JobOptions.prototype['custom_special_handling'] = 'false';





/**
 * Allowed values for the <code>customerApprovalSteps</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['CustomerApprovalStepsEnum'] = {

    /**
     * value: "TRANSLATION"
     * @const
     */
    "TRANSLATION": "TRANSLATION",

    /**
     * value: "RETURN"
     * @const
     */
    "RETURN": "RETURN"
};


/**
 * Allowed values for the <code>customer_approval_tool</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['CustomerApprovalToolEnum'] = {

    /**
     * value: "AMARA"
     * @const
     */
    "AMARA": "AMARA",

    /**
     * value: "CIELO24"
     * @const
     */
    "CIELO24": "CIELO24"
};


/**
 * Allowed values for the <code>speaker_id</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['SpeakerIdEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>audio_description</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['AudioDescriptionEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>on_screen_text</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['OnScreenTextEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>music_lyrics</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['MusicLyricsEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>custom_special_handling</code> property.
 * @enum {String}
 * @readonly
 */
JobOptions['CustomSpecialHandlingEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default JobOptions;

