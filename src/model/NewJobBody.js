/**
 * Cielo24
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewJobBody model module.
 * @module model/NewJobBody
 * @version 1.0.0
 */
class NewJobBody {
    /**
     * Constructs a new <code>NewJobBody</code>.
     * @alias module:model/NewJobBody
     */
    constructor() { 
        
        NewJobBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewJobBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewJobBody} obj Optional instance to populate.
     * @return {module:model/NewJobBody} The populated <code>NewJobBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewJobBody();

            if (data.hasOwnProperty('job_name')) {
                obj['job_name'] = ApiClient.convertToType(data['job_name'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('external_id')) {
                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('requestor')) {
                obj['requestor'] = ApiClient.convertToType(data['requestor'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('expected_speakers')) {
                obj['expected_speakers'] = ApiClient.convertToType(data['expected_speakers'], 'Number');
            }
            if (data.hasOwnProperty('is_duplicate')) {
                obj['is_duplicate'] = ApiClient.convertToType(data['is_duplicate'], 'String');
            }
        }
        return obj;
    }


}

/**
 * A human readable identifier for the job
 * @member {String} job_name
 */
NewJobBody.prototype['job_name'] = undefined;

/**
 * Native job language
 * @member {String} language
 */
NewJobBody.prototype['language'] = undefined;

/**
 * An identifier you want to associate with this job
 * @member {String} external_id
 */
NewJobBody.prototype['external_id'] = undefined;

/**
 * Create the job in specified sub-account
 * @member {String} username
 */
NewJobBody.prototype['username'] = undefined;

/**
 * An requestor you want to associate with this job
 * @member {String} requestor
 */
NewJobBody.prototype['requestor'] = undefined;

/**
 * An reference you want to associate with this job
 * @member {String} reference
 */
NewJobBody.prototype['reference'] = undefined;

/**
 * Amount of speakers that the video will have
 * @member {Number} expected_speakers
 */
NewJobBody.prototype['expected_speakers'] = undefined;

/**
 * Allows creating multiple jobs with the same external_id
 * @member {module:model/NewJobBody.IsDuplicateEnum} is_duplicate
 * @default 'false'
 */
NewJobBody.prototype['is_duplicate'] = 'false';





/**
 * Allowed values for the <code>is_duplicate</code> property.
 * @enum {String}
 * @readonly
 */
NewJobBody['IsDuplicateEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default NewJobBody;

