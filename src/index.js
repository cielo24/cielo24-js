/**
 * Cielo24
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddMediaResponse from './model/AddMediaResponse';
import ErrorResponse from './model/ErrorResponse';
import IWPEnum from './model/IWPEnum';
import JobInfoResponse from './model/JobInfoResponse';
import JobOptions from './model/JobOptions';
import LoginBody from './model/LoginBody';
import LoginResponse from './model/LoginResponse';
import NewJobBody from './model/NewJobBody';
import NewJobResponse from './model/NewJobResponse';
import PerformTranscriptionBody from './model/PerformTranscriptionBody';
import PerformTranscriptionResponse from './model/PerformTranscriptionResponse';
import PerformTranslationResponse from './model/PerformTranslationResponse';
import VerifyKeyResponse from './model/VerifyKeyResponse';
import AccountApi from './api/AccountApi';
import JobApi from './api/JobApi';


/**
* The_cielo24_Web_Services_Platform_API_allows_developers_to_easily_integrate_transcription_captioning_and_keyword_extraction_into_their_applications_without_having_to_use_a_manual_web_portal_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Cielo24 = require('index'); // See note below*.
* var xxxSvc = new Cielo24.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Cielo24.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Cielo24.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Cielo24.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddMediaResponse model constructor.
     * @property {module:model/AddMediaResponse}
     */
    AddMediaResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The IWPEnum model constructor.
     * @property {module:model/IWPEnum}
     */
    IWPEnum,

    /**
     * The JobInfoResponse model constructor.
     * @property {module:model/JobInfoResponse}
     */
    JobInfoResponse,

    /**
     * The JobOptions model constructor.
     * @property {module:model/JobOptions}
     */
    JobOptions,

    /**
     * The LoginBody model constructor.
     * @property {module:model/LoginBody}
     */
    LoginBody,

    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse,

    /**
     * The NewJobBody model constructor.
     * @property {module:model/NewJobBody}
     */
    NewJobBody,

    /**
     * The NewJobResponse model constructor.
     * @property {module:model/NewJobResponse}
     */
    NewJobResponse,

    /**
     * The PerformTranscriptionBody model constructor.
     * @property {module:model/PerformTranscriptionBody}
     */
    PerformTranscriptionBody,

    /**
     * The PerformTranscriptionResponse model constructor.
     * @property {module:model/PerformTranscriptionResponse}
     */
    PerformTranscriptionResponse,

    /**
     * The PerformTranslationResponse model constructor.
     * @property {module:model/PerformTranslationResponse}
     */
    PerformTranslationResponse,

    /**
     * The VerifyKeyResponse model constructor.
     * @property {module:model/VerifyKeyResponse}
     */
    VerifyKeyResponse,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The JobApi service constructor.
    * @property {module:api/JobApi}
    */
    JobApi
};
